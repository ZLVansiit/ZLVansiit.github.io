import{_ as s,c as i,o as a,a5 as t}from"./chunks/framework.BVVl-PlE.js";const c=JSON.parse('{"title":"utf8和utf8mb4的区别 - MySQL字符集和比较规则","description":"","frontmatter":{"outline":"deep","title":"utf8和utf8mb4的区别 - MySQL字符集和比较规则"},"headers":[],"relativePath":"2023/12/02/mysql-character-set.md","filePath":"2023/12/02/mysql-character-set.md","lastUpdated":1727332769000}'),n={name:"2023/12/02/mysql-character-set.md"},h=t(`<h1 id="utf8和utf8mb4的区别-mysql字符集和比较规则" tabindex="-1">utf8和utf8mb4的区别 - MySQL字符集和比较规则 <a class="header-anchor" href="#utf8和utf8mb4的区别-mysql字符集和比较规则" aria-label="Permalink to &quot;utf8和utf8mb4的区别 - MySQL字符集和比较规则&quot;">​</a></h1><h2 id="一、基础概念" tabindex="-1">一、基础概念 <a class="header-anchor" href="#一、基础概念" aria-label="Permalink to &quot;一、基础概念&quot;">​</a></h2><h3 id="_1、位-比特位-bit" tabindex="-1">1、位 / 比特位 （bit） <a class="header-anchor" href="#_1、位-比特位-bit" aria-label="Permalink to &quot;1、位 / 比特位 （bit）&quot;">​</a></h3><p>位/比特位/bit，数据存储的最小单位。每个二进制数字0或者1就是1个位。</p><hr><h3 id="_2、字节-byte" tabindex="-1">2、字节（Byte） <a class="header-anchor" href="#_2、字节-byte" aria-label="Permalink to &quot;2、字节（Byte）&quot;">​</a></h3><p>字节(Byte)是一种计量单位，表示数据量多少，它是计算机信息技术用于计量存储容量的一种计量单位。</p><p>8个位构成一个字节。即：1 byte (字节)= 8 bit (位)；</p><p>1 B = 1 byte(字节);</p><p>1 KB = 1024 B(字节);</p><p>1 MB = 1024 KB;(2^10 B)</p><p>1 GB = 1024 MB;(2^20 B)</p><p>1 TB = 1024 GB;(2^30 B)</p><hr><h3 id="_3、字符-character" tabindex="-1">3、字符（Character） <a class="header-anchor" href="#_3、字符-character" aria-label="Permalink to &quot;3、字符（Character）&quot;">​</a></h3><p>字符是指计算机中使用的文字和符号，比如1、2、3、A、B、C、~！·#￥%……—* () ——+、等等。</p><p>a、A、中、+、*、の…均表示一个字符；</p><p>一般 utf-8 编码下，一个汉字字符占用 3 个 字节；</p><p>一般 gbk 编码下，一个汉字字符占用 2 个 字节；</p><blockquote><h3 id="小贴士" tabindex="-1">小贴士 <a class="header-anchor" href="#小贴士" aria-label="Permalink to &quot;小贴士&quot;">​</a></h3><p>“字节”与“字符”</p><p>它们完全不是一个维度的概念，所以两者之间没有“区别”这个说法。不同编码里，字符和字节的对应关系不同：</p><p>①ASCII码中，一个英文字母(不分大小写)占一个字节的空间，一个中文汉字占两个字节的空间。一个二进制数字序列，在计算机中作为一个数字单元，一般为8位二进制数，换算为十进制。最小值0，最大值255。</p><p>②UTF-8编码中，一个英文字符等于一个字节，一个中文(含繁体)等于三个字节。</p><p>③Unicode编码中，一个英文等于两个字节，一个中文(含繁体)等于两个字节。</p><p>符号：英文标点占一个字节，中文标点占两个字节。举例：英文句号“.”占1个字节的大小，中文句号“。”占2个字节的大小。</p><p>④UTF-16编码中，一个英文字母字符或一个汉字字符存储都需要2个字节(Unicode扩展区的一些汉字存储需要4个字节)。</p><p>⑤UTF-32编码中，世界上任何字符的存储都需要4个字节。</p></blockquote><hr><h3 id="_4、字符集-character-set" tabindex="-1">4、字符集（Character Set） <a class="header-anchor" href="#_4、字符集-character-set" aria-label="Permalink to &quot;4、字符集（Character Set）&quot;">​</a></h3><p>字符集是指多个字符的集合。</p><p>不同的字符集包含的字符个数不一样、包含的字符不一样、对字符的编码方式也不一样。</p><p>例如GB2312是中国国家标准的简体中文字符集，GB2312收录简化汉字（6763个）及一般符号、序号、数字、拉丁字母、日文假名、希腊字母、俄文字母、汉语拼音符号、汉语注音字母，共 7445 个图形字符。</p><p>而ASCII字符集只包含了128字符，这个字符集收录的主要字符是英文字母、阿拉伯字母和一些简单的控制字符。</p><p>另外，还有其他常用的字符集有 GBK字符集、GB18030字符集、Big5字符集、Unicode字符集等。</p><hr><h3 id="_5、字符编码-character-encoding" tabindex="-1">5、字符编码（Character Encoding） <a class="header-anchor" href="#_5、字符编码-character-encoding" aria-label="Permalink to &quot;5、字符编码（Character Encoding）&quot;">​</a></h3><p>字符编码是指一种映射规则，根据这个映射规则可以将某个字符映射成其他形式的数据以便在计算机中存储和传输。</p><p>例如ASCII字符编码规定使用单字节中低位的7个比特去编码所有的字符，在这个编码规则下字母A的编号是65（ASCII码），用单字节表示就是0x41，因此写入存储设备的时候就是二进制的 01000001。</p><p>每种字符集都有自己的字符编码规则，常用的字符集编码规则还有 UTF-8编码、GBK编码、Big5编码等。</p><hr><h2 id="二、mysql中的字符集" tabindex="-1">二、MySQL中的字符集 <a class="header-anchor" href="#二、mysql中的字符集" aria-label="Permalink to &quot;二、MySQL中的字符集&quot;">​</a></h2><blockquote><p>MySQL中并不区分字符集和编码方案的概念，所以后边把utf8、utf16、utf32都当作一种字符集对待。</p></blockquote><p>MySQL中的utf8和utf8mb4</p><p>我们上边说utf8字符集表示一个字符需要使用1～4个字节，但是我们常用的一些字符使用1～3个字节就可以表示了。</p><p>而在MySQL中字符集表示一个字符所用最大字节长度在某些方面会影响系统的存储和性能，所以MySQL的设计者们定义了两个概念：</p><p>utf8mb3：阉割过的utf8字符集，只使用1～3个字节表示字符。</p><p>utf8mb4：正宗的utf8字符集，使用1～4个字节表示字符。</p><p>MySQL有4个级别的字符集和比较规则：服务器级别、数据库级别、表级别、列级别。也就是说可以单独设置服务器、DB、Table、Column的字符集和比较规则，当然前提是更高级别的字符集支持。</p><blockquote><h3 id="小贴士-1" tabindex="-1">小贴士 <a class="header-anchor" href="#小贴士-1" aria-label="Permalink to &quot;小贴士&quot;">​</a></h3><p>有一点需要大家十分的注意，在MySQL中utf8是utf8mb3的别名，所以之后在MySQL中提到utf8就意味着使用1~3个字节来表示一个字符，如果大家有使用4字节编码一个字符的情况，比如存储一些emoji表情，那请使用utf8mb4。</p><p>所以大家在创建数据库和表的时候，千万要注意，以免后续更改字符集造成很大的麻烦。</p><p>在MySQL8.0中，已经极大程度优化了utf8mb4字符集的性能，并将其设置为默认字符集</p></blockquote><hr><h2 id="三、比较规则" tabindex="-1">三、比较规则 <a class="header-anchor" href="#三、比较规则" aria-label="Permalink to &quot;三、比较规则&quot;">​</a></h2><blockquote><h4 id="小贴士-2" tabindex="-1">小贴士 <a class="header-anchor" href="#小贴士-2" aria-label="Permalink to &quot;小贴士&quot;">​</a></h4><p>将字符映射成二进制数据的过程叫做编码</p><p>将二进制数据映射到字符的过程叫做解码</p></blockquote><p>前面介绍了字符集和字符编码，那么如何比较两个字符的大小呢?</p><p>例如：直接比较这两个字符对应的二进制编码的大小</p><p>或将两个大小写不同的字符全部都转为大写或者小写，再比较这两个字符对应的二进制数据</p><hr><h3 id="_1-比较规则的查看" tabindex="-1">1. 比较规则的查看 <a class="header-anchor" href="#_1-比较规则的查看" aria-label="Permalink to &quot;1. 比较规则的查看&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SHOW COLLATION [LIKE 匹配的模式];</span></span></code></pre></div><p>一种字符集可能对应着若干种比较规则，MySQL支持的字符集就已经非常多了，所以支持的比较规则更多，我们先只查看一下utf8字符集下的比较规则：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mysql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SHOW COLLATION </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LIKE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;utf8\\_%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--------------------------+---------+-----+---------+----------+---------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| Collation                | Charset | Id  | </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | Compiled | Sortlen |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--------------------------+---------+-----+---------+----------+---------+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_general_ci          | utf8    |  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">33</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> | Yes     | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_bin                 | utf8    |  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">83</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_unicode_ci          | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">192</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_icelandic_ci        | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">193</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_latvian_ci          | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">194</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_romanian_ci         | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">195</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_slovenian_ci        | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">196</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_polish_ci           | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">197</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_estonian_ci         | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">198</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_spanish_ci          | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">199</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_swedish_ci          | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_turkish_ci          | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">201</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_czech_ci            | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">202</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_danish_ci           | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">203</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_lithuanian_ci       | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">204</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_slovak_ci           | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">205</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_spanish2_ci         | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">206</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_roman_ci            | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">207</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_persian_ci          | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">208</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_esperanto_ci        | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">209</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_hungarian_ci        | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">210</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_sinhala_ci          | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">211</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_german2_ci          | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">212</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_croatian_ci         | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">213</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_unicode_520_ci      | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">214</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_vietnamese_ci       | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">215</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">| utf8_general_mysql500_ci | utf8    | </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">223</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |         | Yes      |       </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--------------------------+---------+-----+---------+----------+---------+</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">27</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> rows</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sec)</span></span></code></pre></div><p>这些比较规则的命名还挺有规律的，具体规律如下：</p><p>比较规则名称以与其关联的字符集的名称开头。如上图的查询结果的比较规则名称都是以utf8开头的。</p><p>后边紧跟着该比较规则主要作用于哪种语言，比如utf8_polish_ci表示以波兰语的规则比较，utf8_spanish_ci是以西班牙语的规则比较，utf8_general_ci是一种通用的比较规则。</p><p>名称后缀意味着该比较规则是否区分语言中的重音、大小写啥的，具体可以用的值如下：</p><table><thead><tr><th style="text-align:center;">后缀</th><th style="text-align:center;">英文释义</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">_ai</td><td style="text-align:center;">accent insensitive</td><td style="text-align:center;">不区分重音</td></tr><tr><td style="text-align:center;">_as</td><td style="text-align:center;">accent sensitive</td><td style="text-align:center;">区分重音</td></tr><tr><td style="text-align:center;">_ci</td><td style="text-align:center;">case insensitive</td><td style="text-align:center;">不区分大小写</td></tr><tr><td style="text-align:center;">_cs</td><td style="text-align:center;">case sensitive</td><td style="text-align:center;">区分大小写</td></tr><tr><td style="text-align:center;">_bin</td><td style="text-align:center;">binary</td><td style="text-align:center;">以二进制方式比较</td></tr></tbody></table><hr><h3 id="_2-比较规则的应用" tabindex="-1">2.比较规则的应用 <a class="header-anchor" href="#_2-比较规则的应用" aria-label="Permalink to &quot;2.比较规则的应用&quot;">​</a></h3><p>在对字符串进行比较，或者对某个字符串列执行排序操作时，如果没有得到想象中的结果，需要思考一下是不是比较规则的问题。</p><hr><h1 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h1><ol><li><p>字符集指的是某个字符范围的编码规则。</p></li><li><p>比较规则是针对某个字符集中的字符比较大小的一种规则。</p></li><li><p>在MySQL中，一个字符集可以有若干种比较规则，其中有一个默认的比较规则，一个比较规则必须对应一个字符集。</p></li><li><p>查看MySQL中查看支持的字符集和比较规则的语句如下：</p></li></ol><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SHOW (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CHARACTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|CHARSET) [LIKE 匹配的模式];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SHOW COLLATION [LIKE 匹配的模式];</span></span></code></pre></div><ol start="5"><li><p>MySQL有四个级别的字符集和比较规则</p><p>a.服务器级别</p></li></ol><p>character_set_server表示服务器级别的字符集，collation_server表示服务器级别的比较规则。</p><pre><code>b. 数据库级别
</code></pre><p>创建和修改数据库时可以指定字符集和比较规则：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DATABASE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 数据库名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [[DEFAULT] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CHARACTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 字符集名称]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [[DEFAULT] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COLLATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 比较规则名称];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DATABASE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 数据库名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [[DEFAULT] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CHARACTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 字符集名称]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [[DEFAULT] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COLLATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 比较规则名称];</span></span></code></pre></div><p>character_set_database表示当前数据库的字符集，collation_database表示当前默认数据库的比较规则，这两个系统变量是只读的，不能修改。如果没有指定当前默认数据库，则变量与相应的服务器级系统变量具有相同的值。</p><pre><code>c. 表级别
</code></pre><p>创建和修改表的时候指定表的字符集和比较规则：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 表名</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (列的信息)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [[DEFAULT] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CHARACTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 字符集名称]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [COLLATE 比较规则名称]];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [[DEFAULT] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CHARACTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 字符集名称]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [COLLATE 比较规则名称];</span></span></code></pre></div><pre><code>d. 列级别
</code></pre><p>创建和修改列定义的时候可以指定该列的字符集和比较规则：</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 表名</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    列名 字符串类型 [CHARACTER SET 字符集名称] [COLLATE 比较规则名称],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    其他列...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MODIFY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 列名 字符串类型 [CHARACTER SET 字符集名称] [COLLATE 比较规则名称];</span></span></code></pre></div>`,77),l=[h];function p(k,e,E,r,d,g){return a(),i("div",null,l)}const o=s(n,[["render",p]]);export{c as __pageData,o as default};
